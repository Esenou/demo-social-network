{"version":3,"sources":["hoc/withAuthRedirect.js","StoreContext.js","components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","createContext","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Post","className","s","post","item","src","message","likesCount","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","newPostText","name","MyPosts","memo","postElements","posts","reverse","map","postsBlock","addPost","addNewPostBody","console","log","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","userProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.01b09f22.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => (\n    {\n        isAuth: state.auth.isAuth\n    }\n);\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nconst StoreContext = React.createContext(null)\n\nexport const Provider = (props) => {\n    return (\n    <StoreContext.Provider value={props.store}>\n        {props.children }\n    </StoreContext.Provider>\n    )\n}\n\nexport default StoreContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__Kyaaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","\nimport React from 'react'\nimport s from './Post.module.css';\nconst Post = (props) => {\n  return (\n    <div className={s.post}>\n      <div className={s.item}>\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRNplTWk2suGea3AcNZ-nzKJVrLX9mL0SGOmA&usqp=CAU'></img>\n          {props.message}\n          <div>\n            <spam>Like {props.likesCount}</spam>\n          </div>\n      </div>\n\n    </div>\n\n  );\n}\nexport default Post\n","\nimport React, { Component } from 'react'\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\n\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst length = maxLengthCreator(10);\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[required, length]} component={Textarea}\n          value={props.newPostText} name={\"addNewPostBody\"} />\n      </div>\n\n      <div> <button> Add post</button></div>\n    </form>\n  )\n}\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddNewPostForm)\nconst MyPosts = React.memo(props => {\n\n  let postElements = [...props.posts]\n    .reverse()\n    .map(post => <Post message={post.message} likesCount={post.likesCount} />);\n\n\n  const addNewPost = (post) => {\n    props.addPost(post.addNewPostBody)\n    console.log(post.addNewPostBody);\n  }\n\n\n  return (\n\n\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <AddPostReduxForm onSubmit={addNewPost} />\n      </div>\n\n      <div className={s.posts}>\n        {postElements}\n      </div>\n\n\n    </div>\n\n  );\n})\nexport default MyPosts\n","import React from 'react'\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n\n    activateEditMode = () => {\n        this.setState(\n            {\n                editMode: true\n            }\n        )\n    }\n    deactivateEditMode = () => {\n\n        this.setState(\n            {\n\n                editMode: false\n            }\n        )\n        this.props.updateStatus(this.state.status);\n    }\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n\n    }\n\n    componentDidUpdate (prevProps,prevState){\n        if(prevProps.status!== this.props.status){\n            this.setState(\n                {\n                    status:this.props.status\n                }\n            )\n        }\n    }\n    render() {\n\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div >\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div >\n                        <input onChange={this.onStatusChange} autoFocus={true}\n                            onBlur={this.deactivateEditMode} value={this.state.status} />\n                    </div>\n                }\n            </div>\n\n        );\n    }\n}\nexport default ProfileStatus","import React, { useState, useEffect } from 'react'\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\n\nconst ProfileStatusWithHooks = (props) => {\n\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        let value = e.currentTarget.value;\n        setStatus(value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div >\n                    <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\n                </div>\n            }\n            {editMode &&\n                <div >\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} />\n                </div>\n            }\n        </div>\n\n    );\n\n}\nexport default ProfileStatusWithHooks","import React from 'react'\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus.js';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n    \n    return (\n\n        <div >\n            {/* <div>\n                <img src=\"https://live.staticflickr.com/7218/7184786016_1ddab461e8_b.jpg\" />\n            </div> */}\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large} />\n                \n                <ProfileStatusWithHooks  status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n\n    );\n}\nexport default ProfileInfo","\nimport React from 'react'\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport StoreContext from '../../../StoreContext';\nimport store from '../../../redux/redux-store';\nimport { connect } from 'react-redux';\n\n\n\n// const MyPostsContainer = (props) => {\n\n\n\n//   return (\n//     <StoreContext.Consumer>{\n//       (store) => {\n//         let state = store.getState();\n\n//         let addPost = () => {\n//           store.dispatch(addPostActionCreator());\n//         }\n//         let onPostChange = (text) => {\n//           let action = updateNewPostTextActionCreator(text);\n//           store.dispatch(action);\n//         }\n//         return (\n//           <MyPosts updateNewPostText={onPostChange} addPost={addPost}\n//             posts={state.profilePage.post}\n//             newPostText={state.profilePage.newPostText} />\n//         )\n//       }\n//     }\n//     </StoreContext.Consumer>\n\n\n//   );\n// }\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.post,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost:  (addNewPostBody) => {\n      dispatch(addPostActionCreator(addNewPostBody));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer\n","import React from 'react'\nimport s from './Profile.module.css';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n   \n    return (    \n\n        <div className={s.content} >\n\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n\n            <MyPostsContainer/>\n\n        </div>\n    );\n}\nexport default Profile","import React from 'react'\nimport s from './Profile.module.css';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { userProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { usersAPI } from '../../api/api';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n\n\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n               \n                console.log(\"userId!\" + userId);\n                // this.props.history.push(\"/login\");\n            }\n        }\n\n        this.props.userProfile(userId);\n        this.props.getStatus(userId);\n\n        // usersAPI.getUserProfile(userId).then(response => {\n        //     this.props.setUserProfile(response.data);\n        // });\n    }\n    render() {\n\n        return (\n            \n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, { userProfile, getStatus, updateStatus }),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}