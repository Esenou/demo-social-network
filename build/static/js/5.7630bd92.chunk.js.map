{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","StoreContext.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","createContext","Message","className","s","message","DialogItem","path","id","dialog","name","maxLength15","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogElements","dialogsPages","dialogsData","map","messagesElements","messagesData","m","dialogs","dialogsItems","messages","fromData","console","log","sendMessage","newMessageBody","AuthRedirectComponent","DialogsContainer","dialogsPage","dispatch","sendMessageCreator"],"mappings":"8MAKIA,EAA6B,SAACC,GAAD,MAC7B,CACIC,OAAQD,EAAME,KAAKD,SAGdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBClB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iCCDnN,oBACqBH,IAAMI,cAAc,O,uFCU1BC,EANC,SAACP,GACf,OACE,yBAAKQ,UAAWC,IAAEC,SAAUV,EAAMU,U,QCUvBC,EAXI,SAACX,GAClB,IAAIY,EAAO,YAAcZ,EAAMa,GAC/B,OAEE,yBAAKL,UAAWC,IAAEK,QAChB,kBAAC,IAAD,CAASb,GAAIW,GAAOZ,EAAMe,Q,kCCD1BC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAACnB,GACtB,OACE,0BAAMqB,SAAUrB,EAAMsB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAQC,SAAU,CAACC,IAAST,GAAeU,UAAWC,IAAWC,YAAY,qBAAqBb,KAAK,oBAGzG,6BACE,6CA8COc,EApCC,SAAC7B,GAIf,IAAI8B,EAAiB9B,EAAM+B,aAAaC,YAAYC,KAAI,SAAAnB,GAAM,OAAI,kBAAC,EAAD,CAAYC,KAAMD,EAAOC,KAAMF,GAAIC,EAAOD,QACxGqB,EAAmBlC,EAAM+B,aAAaI,aAAaF,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,aAWpF,OACE,yBAAKF,UAAWC,IAAE4B,SAChB,yBAAK7B,UAAWC,IAAE6B,cACfR,GAGH,yBAAKtB,UAAWC,IAAE8B,UACfL,EACD,6BACE,6BACE,kBAAChB,EAAD,CAAqBG,SAhBT,SAACmB,GAErBC,QAAQC,IAAIF,GACZxC,EAAM2C,YAAYH,EAASI,wB,0BC2B3BC,EAAwBjD,YAAiBiC,GAGvCiB,EAAmB3C,aAnBH,SAACV,GACrB,MAAO,CAELsC,aAActC,EAAMsD,gBAIC,SAACC,GAExB,MAAO,CACLL,YAAa,SAACC,GACZI,EAASC,YAAmBL,QAQTzC,CAA6C0C,GACvDC","file":"static/js/5.7630bd92.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => (\n    {\n        isAuth: state.auth.isAuth\n    }\n);\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nconst StoreContext = React.createContext(null)\n\nexport const Provider = (props) => {\n    return (\n    <StoreContext.Provider value={props.store}>\n        {props.children }\n    </StoreContext.Provider>\n    )\n}\n\nexport default StoreContext;","\nimport React from 'react'\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Message = (props) => {\n  return (\n    <div className={s.message}>{props.message}</div>\n  );\n\n}\nexport default Message\n","\nimport React from 'react'\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n\n    <div className={s.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n\n  );\n}\n\nexport default DialogItem;\n\n","\nimport React from 'react'\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport { reduxForm, Field, FieldArray } from 'redux-form';\nimport { required, maxLengthCreator } from '../../utils/validators/validator';\nimport { Textarea } from '../common/FormsControls/FormsControls';\n\nconst maxLength15 = maxLengthCreator(15);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field  validate={[required,maxLength15]}  component={Textarea}  placeholder=\"Enter your message\" name=\"newMessageBody\"  />\n\n      </div >\n      <div>\n        <button>send</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n\n\n\nconst Dialogs = (props) => {\n\n\n\n  let dialogElements = props.dialogsPages.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\n  let messagesElements = props.dialogsPages.messagesData.map(m => <Message message={m.message} />);\n  \n\n\n\n  const addNewMessage = (fromData) => {\n    \n    console.log(fromData)\n    props.sendMessage(fromData.newMessageBody);\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogElements}\n      </div>\n\n      <div className={s.messages}>\n        {messagesElements}\n        <div>\n          <div>\n            <AddMessageReduxForm onSubmit={addNewMessage} />\n          </div>\n        </div>\n\n\n      </div>\n    </div >\n  );\n\n}\nexport default Dialogs\n","\nimport React from 'react'\nimport {  sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\n\n\n// const DialogsContainer = (props) => {\n\n\n\n//   return (\n\n//     <StoreContext.Consumer>\n//        {\n//       (store) => {\n//         let state = store.getState().dialogsPage;\n\n//         let onSendMessage = () => {\n//           store.dispatch(sendMessageCreator());\n//         }\n//         let onChangeNewMessage = (body) => {\n//           store.dispatch(updateNewMessageBodyCreator(body));\n\n//         }\n//         return (\n//           <Dialogs\n//             sendMessage={onSendMessage}\n//             updateNewMessageBody={onChangeNewMessage}\n//             state={state}\n//           />\n//         )\n//       }\n//     }\n\n//     </StoreContext.Consumer>\n\n//   );\n\n// }\n\n// class DialogsContainer extends React.Component {\n\n//   componentDidMount() {\n\n//   }\n//   render() {\n//     return <Dialogs/>\n//   }\n// }\nlet mapStateToProps = (state) => {\n  return {\n\n    dialogsPages: state.dialogsPage,\n\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n   \n  }\n}\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;\n\n"],"sourceRoot":""}