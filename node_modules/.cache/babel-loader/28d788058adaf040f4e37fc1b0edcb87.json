{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data,\n          isAuth: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const authorition = () => {\n  return dispatch => {\n    usersAPI.auth().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          userId,\n          email,\n          login\n        } = response.data.data;\n        dispatch(setAuthUserData(userId, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/home/esen/my-app/src/redux/auth-reducer.js"],"names":["usersAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","authorition","dispatch","auth","then","response","resultCode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AAAoB;AAEhB,eAAO,EACH,GAAGO,KADA;AAEH,aAAGC,MAAM,CAACE,IAFP;AAGHL,UAAAA,MAAM,EAAC;AAHJ,SAAP;AAMC;;AAEL;AACI,aAAOE,KAAP;AAZR;AAeH,CAhBD;;AAkBA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAAEK,EAAAA,IAAI,EAAET,aAAR;AAAuBU,EAAAA,IAAI,EAAE;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA7B,CAA3B,CAAxB;AAEP,OAAO,MAAMQ,WAAW,GAAG,MAAK;AAC5B,SAAQC,QAAD,IAAc;AACjBd,IAAAA,QAAQ,CAACe,IAAT,GAAgBC,IAAhB,CAAqBC,QAAQ,IAAI;AAC7B,UAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAClC,YAAI;AAAEf,UAAAA,MAAF;AAAUC,UAAAA,KAAV;AAAiBC,UAAAA;AAAjB,YAA2BY,QAAQ,CAACN,IAAT,CAAcA,IAA7C;AACAG,QAAAA,QAAQ,CAACF,eAAe,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,CAAhB,CAAR;AACD;AACF,KALH;AAMH,GAPD;AAQH,CATM;AAWP,eAAeE,WAAf","sourcesContent":["import { usersAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n\n            return {\n                ...state,\n                ...action.data,\n                isAuth:true\n            \n                }\n            }\n       \n        default:\n            return state;\n    }\n\n}\n\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, data: {userId, email, login}})\n\nexport const authorition = () =>{\n    return (dispatch) => {\n        usersAPI.auth().then(response => {\n            if (response.data.resultCode === 0) {\n              let { userId, email, login } = response.data.data;\n              dispatch(setAuthUserData(userId, email, login));\n            }\n          });\n    }\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}