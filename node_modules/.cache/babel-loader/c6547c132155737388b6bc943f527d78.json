{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst getUsersSelector = state => {\n  return state.usersPage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUserCount = state => {\n  return state.usersPage.totalUserCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};","map":{"version":3,"sources":["/home/esen/my-app/src/redux/users-selectors.js"],"names":["createSelector","getUsersSelector","state","usersPage","users","getUsers","filter","u","getPageSize","pageSize","getTotalUserCount","totalUserCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAGL,cAAc,CAACC,gBAAD,EACjCG,KAAD,IAAW;AACP,SAAOA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACP,CAHqC,CAA/B;AAIP,OAAO,MAAMC,WAAW,GAAIN,KAAD,IAAW;AAAE,SAAOA,KAAK,CAACC,SAAN,CAAgBM,QAAvB;AAAiC,CAAlE;AAEP,OAAO,MAAMC,iBAAiB,GAAIR,KAAD,IAAW;AAAE,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,cAAvB;AAAuC,CAA9E;AAEP,OAAO,MAAMC,cAAc,GAAIV,KAAD,IAAW;AAAE,SAAOA,KAAK,CAACC,SAAN,CAAgBU,WAAvB;AAAoC,CAAxE;AAEP,OAAO,MAAMC,aAAa,GAAIZ,KAAD,IAAW;AAAE,SAAOA,KAAK,CAACC,SAAN,CAAgBY,UAAvB;AAAmC,CAAtE;AAEP,OAAO,MAAMC,sBAAsB,GAAId,KAAD,IAAW;AAAE,SAAOA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB;AAA4C,CAAxF","sourcesContent":["import { createSelector } from \"reselect\"\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n        return users.filter(u => true);\n})\nexport const getPageSize = (state) => { return state.usersPage.pageSize }\n\nexport const getTotalUserCount = (state) => { return state.usersPage.totalUserCount }\n\nexport const getCurrentPage = (state) => { return state.usersPage.currentPage }\n\nexport const getIsFetching = (state) => { return state.usersPage.isFetching }\n\nexport const getFollowingInProgress = (state) => { return state.usersPage.followingInProgress }"]},"metadata":{},"sourceType":"module"}