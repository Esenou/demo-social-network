{"ast":null,"code":"import React from'react';import{reduxForm,Field}from'redux-form';import{Input}from'../common/FormsControls/FormsControls';import{required}from'../../utils/validators/validator';import{connect}from'react-redux';import{login}from'../../redux/auth-reducer';import{Redirect}from'react-router-dom';import styles from'../common/FormsControls/FormsControls.module.css';var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{validate:[required],placeholder:\"Login\",name:\"email\",component:Input})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{validate:[required],placeholder:\"Password\",name:\"password\",type:\"password\",component:Input})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{validate:[required],component:Input,type:\"checkbox\",name:\"rememberMe\"})),error&&/*#__PURE__*/React.createElement(\"div\",{className:styles.formSummaryError},error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){console.log(formData);props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(LoginReduxForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/home/esen/my-app/src/components/Login/login.jsx"],"names":["React","reduxForm","Field","Input","required","connect","login","Redirect","styles","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","console","log","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,KAAT,KAAsB,uCAAtB,CACA,OAASC,QAAT,KAAyB,kCAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kDAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAzBC,CAAAA,YAAyB,MAAzBA,YAAyB,CAAXC,KAAW,MAAXA,KAAW,CACzC,mBAEI,4BAAM,QAAQ,CAAED,YAAhB,eACI,4CACI,oBAAC,KAAD,EAAO,QAAQ,CAAE,CAACN,QAAD,CAAjB,CAA6B,WAAW,CAAE,OAA1C,CAAmD,IAAI,CAAE,OAAzD,CAAkE,SAAS,CAAED,KAA7E,EADJ,CADJ,cAII,4CACI,oBAAC,KAAD,EAAO,QAAQ,CAAE,CAACC,QAAD,CAAjB,CAA6B,WAAW,CAAE,UAA1C,CAAsD,IAAI,CAAE,UAA5D,CAAwE,IAAI,CAAE,UAA9E,CAA0F,SAAS,CAAED,KAArG,EADJ,CAJJ,cAOI,4CACI,oBAAC,KAAD,EAAO,QAAQ,CAAE,CAACC,QAAD,CAAjB,CAA6B,SAAS,CAAED,KAAxC,CAA+C,IAAI,CAAE,UAArD,CAAiE,IAAI,CAAE,YAAvE,EADJ,CAPJ,CAUKQ,KAAK,eAAI,2BAAK,SAAS,CAAEH,MAAM,CAACI,gBAAvB,EACLD,KADK,CAVd,cAaI,4CACI,0CADJ,CAbJ,CAFJ,CAoBH,CArBD,CAuBA,GAAME,CAAAA,cAAc,CAAGZ,SAAS,CAAC,CAAEa,IAAI,CAAE,OAAR,CAAD,CAAT,CAA6BL,SAA7B,CAAvB,CAEA,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAF,KAAK,CAACV,KAAN,CAAYY,QAAQ,CAACG,KAArB,CAA4BH,QAAQ,CAACI,QAArC,CAA+CJ,QAAQ,CAACK,UAAxD,EACH,CAHD,CAIA,GAAIP,KAAK,CAACQ,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBAAO,4CACH,sCADG,cAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAEP,QAA1B,EAFG,CAAP,CAIH,CAbD,CAcA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAGA,cAAenB,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAAEnB,KAAK,CAALA,KAAF,CAAlB,CAAP,CAAoCS,KAApC,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validator';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom';\nimport styles from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field validate={[required]} placeholder={\"Login\"} name={\"email\"} component={Input} />\n            </div>\n            <div>\n                <Field validate={[required]} placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input} />\n            </div>\n            <div>\n                <Field validate={[required]} component={Input} type={\"checkbox\"} name={\"rememberMe\"} />\n            </div>\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}