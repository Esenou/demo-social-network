{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/common/Paginator/Paginator.jsx\";\nimport React, { useState } from 'react';\nimport s from './Paginator.module.css';\n\nlet Paginator = props => {\n  let portionSize = 10;\n  let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Prev\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Next\")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/home/esen/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","props","portionSize","pagesCount","Math","ceil","totalUserCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","cn","styles","selectedPage","currentPage","pageNumber","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,wBAAd;;AACA,IAAIC,SAAS,GAAIC,KAAD,IAAW;AAEvB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,cAAN,GAAuBL,KAAK,CAACM,QAAvC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBV,WAAtB,GAAoC,CAAhE;AACA,MAAIa,sBAAsB,GAAGH,aAAa,GAAGV,WAA7C;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKU,aAAa,GAAG,CAAhB,iBACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,EAMQJ,KAAK,CACAQ,MADL,CACYC,CAAC,IAAIA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAIF,sBADpD,EAEKG,GAFL,CAESD,CAAC,IAAI;AACN,wBAAO;AAAM,MAAA,SAAS,EAAEE,EAAE,CAAC;AAAC,SAACC,MAAM,CAACC,YAAR,GAAsBC,WAAW,KAAGL;AAArC,OAAD,EACvBG,MAAM,CAACG,UADgB,CAAnB;AAEH,MAAA,GAAG,EAAEN,CAFF;AAIH,MAAA,OAAO,EAAGO,CAAD,IAAO;AAAEvB,QAAAA,KAAK,CAACwB,aAAN,CAAoBR,CAApB;AAAwB,OAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAI0CA,CAJ1C,CAAP;AAKH,GARL,CANR,EAgBKN,YAAY,GAAGC,aAAf,iBACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBR,CAFG,CAAP;AA0BH,CAxCD;;AA0CA,eAAeZ,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport s from './Paginator.module.css';\nlet Paginator = (props) => {\n\n    let portionSize = 10;\n    let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div>\n\n        <div>\n\n            {portionNumber > 1 &&\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>Prev</button>\n            }\n            {\n                pages\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map(p => {\n                        return <span className={cn({[styles.selectedPage]:currentPage===p\n                        }, styles.pageNumber)}\n                            key={p}\n                            \n                            onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\n                    })\n            }\n            {portionCount > portionNumber &&\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>\n            }\n\n\n        </div>\n\n    </div>\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}