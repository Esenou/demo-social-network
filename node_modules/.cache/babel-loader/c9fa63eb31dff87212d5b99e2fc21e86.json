{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/Login/login.jsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validator';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport styles from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validate: [required],\n    placeholder: \"Login\",\n    name: \"email\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validate: [required],\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    component: Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validate: [required],\n    component: Input,\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/esen/my-app/src/components/Login/login.jsx"],"names":["React","reduxForm","Field","Input","required","connect","login","Redirect","styles","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","console","log","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,uCAAtB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,kDAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AACzC,sBAEI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,CAACN,QAAD,CAAjB;AAA6B,IAAA,WAAW,EAAE,OAA1C;AAAmD,IAAA,IAAI,EAAE,OAAzD;AAAkE,IAAA,SAAS,EAAED,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,CAACC,QAAD,CAAjB;AAA6B,IAAA,WAAW,EAAE,UAA1C;AAAsD,IAAA,IAAI,EAAE,UAA5D;AAAwE,IAAA,IAAI,EAAE,UAA9E;AAA0F,IAAA,SAAS,EAAED,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,CAACC,QAAD,CAAjB;AAA6B,IAAA,SAAS,EAAED,KAAxC;AAA+C,IAAA,IAAI,EAAE,UAArD;AAAiE,IAAA,IAAI,EAAE,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,EAUKQ,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLD,KADK,CAVd,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbJ,CAFJ;AAoBH,CArBD;;AAuBA,MAAME,cAAc,GAAGZ,SAAS,CAAC;AAAEa,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAA6BL,SAA7B,CAAvB;;AAEA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAF,IAAAA,KAAK,CAACV,KAAN,CAAYY,QAAQ,CAACG,KAArB,EAA4BH,QAAQ,CAACI,QAArC,EAA+CJ,QAAQ,CAACK,UAAxD;AACH,GAHD;;AAIA,MAAIP,KAAK,CAACQ,MAAV,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEP,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAbD;;AAcA,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADa,CAAZ,CAAxB;;AAGA,eAAenB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAoCS,KAApC,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validator';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom';\nimport styles from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field validate={[required]} placeholder={\"Login\"} name={\"email\"} component={Input} />\n            </div>\n            <div>\n                <Field validate={[required]} placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input} />\n            </div>\n            <div>\n                <Field validate={[required]} component={Input} type={\"checkbox\"} name={\"rememberMe\"} />\n            </div>\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}