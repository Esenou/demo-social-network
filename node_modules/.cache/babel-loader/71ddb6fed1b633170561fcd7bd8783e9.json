{"ast":null,"code":"import React from 'react';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'; // const DialogsContainer = (props) => {\n//   return (\n//     <StoreContext.Consumer>\n//        {\n//       (store) => {\n//         let state = store.getState().dialogsPage;\n//         let onSendMessage = () => {\n//           store.dispatch(sendMessageCreator());\n//         }\n//         let onChangeNewMessage = (body) => {\n//           store.dispatch(updateNewMessageBodyCreator(body));\n//         }\n//         return (\n//           <Dialogs\n//             sendMessage={onSendMessage}\n//             updateNewMessageBody={onChangeNewMessage}\n//             state={state}\n//           />\n//         )\n//       }\n//     }\n//     </StoreContext.Consumer>\n//   );\n// }\n// class DialogsContainer extends React.Component {\n//   componentDidMount() {\n//   }\n//   render() {\n//     return <Dialogs/>\n//   }\n// }\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPages: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/home/esen/my-app/src/components/Dialogs/DialogsContainer.js"],"names":["React","updateNewMessageBodyCreator","sendMessageCreator","Dialogs","StoreContext","connect","withAuthRedirect","mapStateToProps","state","dialogsPages","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","sendMessage","updateNewMessageBody","body","AuthRedirectComponent","DialogsContainer"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,6BAAhE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CAIA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAELC,IAAAA,YAAY,EAAED,KAAK,CAACE,WAFf;AAGLC,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAHd,GAAP;AAKD,CAND;;AAOA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AAErC,SAAO;AACLC,IAAAA,WAAW,EAAE,MAAM;AACjBD,MAAAA,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR;AACD,KAHI;AAILc,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC9BH,MAAAA,QAAQ,CAACb,2BAA2B,CAACgB,IAAD,CAA5B,CAAR;AACD;AANI,GAAP;AAQD,CAVD;;AAWA,IAAIC,qBAAqB,GAAGZ,gBAAgB,CAACH,OAAD,CAA5C;AAEA,MAAMgB,gBAAgB,GAAGd,OAAO,CAACE,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CV,OAA7C,CAAzB;AACA,eAAegB,gBAAf","sourcesContent":["\nimport React from 'react'\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\n\n\n// const DialogsContainer = (props) => {\n\n\n\n//   return (\n\n//     <StoreContext.Consumer>\n//        {\n//       (store) => {\n//         let state = store.getState().dialogsPage;\n\n//         let onSendMessage = () => {\n//           store.dispatch(sendMessageCreator());\n//         }\n//         let onChangeNewMessage = (body) => {\n//           store.dispatch(updateNewMessageBodyCreator(body));\n\n//         }\n//         return (\n//           <Dialogs\n//             sendMessage={onSendMessage}\n//             updateNewMessageBody={onChangeNewMessage}\n//             state={state}\n//           />\n//         )\n//       }\n//     }\n\n//     </StoreContext.Consumer>\n\n//   );\n\n// }\n\n// class DialogsContainer extends React.Component {\n\n//   componentDidMount() {\n\n//   }\n//   render() {\n//     return <Dialogs/>\n//   }\n// }\nlet mapStateToProps = (state) => {\n  return {\n    \n    dialogsPages: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBody: (body) => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  }\n}\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}