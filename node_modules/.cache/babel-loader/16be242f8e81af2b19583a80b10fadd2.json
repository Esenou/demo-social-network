{"ast":null,"code":"import React from'react';import s from'./MyPosts.module.css';import Post from'./Post/Post';import{addPostActionCreator}from'../../../redux/profile-reducer';import MyPosts from'./MyPosts';import StoreContext from'../../../StoreContext';import store from'../../../redux/redux-store';import{connect}from'react-redux';// const MyPostsContainer = (props) => {\n//   return (\n//     <StoreContext.Consumer>{\n//       (store) => {\n//         let state = store.getState();\n//         let addPost = () => {\n//           store.dispatch(addPostActionCreator());\n//         }\n//         let onPostChange = (text) => {\n//           let action = updateNewPostTextActionCreator(text);\n//           store.dispatch(action);\n//         }\n//         return (\n//           <MyPosts updateNewPostText={onPostChange} addPost={addPost}\n//             posts={state.profilePage.post}\n//             newPostText={state.profilePage.newPostText} />\n//         )\n//       }\n//     }\n//     </StoreContext.Consumer>\n//   );\n// }\nvar mapStateToProps=function mapStateToProps(state){return{posts:state.profilePage.post,newPostText:state.profilePage.newPostText};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addPost:function addPost(addNewPostBody){dispatch(addPostActionCreator(addNewPostBody));}};};var MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);export default MyPostsContainer;","map":{"version":3,"sources":["/home/esen/my-app/src/components/Profile/MyPosts/MyPostsContainer.js"],"names":["React","s","Post","addPostActionCreator","MyPosts","StoreContext","store","connect","mapStateToProps","state","posts","profilePage","post","newPostText","mapDispatchToProps","dispatch","addPost","addNewPostBody","MyPostsContainer"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,oBAAT,KAAqC,gCAArC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAIA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACLC,KAAK,CAAED,KAAK,CAACE,WAAN,CAAkBC,IADpB,CAELC,WAAW,CAAEJ,KAAK,CAACE,WAAN,CAAkBE,WAF1B,CAAP,CAID,CALD,CAOA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACLC,OAAO,CAAG,iBAACC,cAAD,CAAoB,CAC5BF,QAAQ,CAACZ,oBAAoB,CAACc,cAAD,CAArB,CAAR,CACD,CAHI,CAAP,CAKD,CAND,CAQA,GAAMC,CAAAA,gBAAgB,CAAGX,OAAO,CAACC,eAAD,CAAkBM,kBAAlB,CAAP,CAA6CV,OAA7C,CAAzB,CACA,cAAec,CAAAA,gBAAf","sourcesContent":["\nimport React from 'react'\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport StoreContext from '../../../StoreContext';\nimport store from '../../../redux/redux-store';\nimport { connect } from 'react-redux';\n\n\n\n// const MyPostsContainer = (props) => {\n\n\n\n//   return (\n//     <StoreContext.Consumer>{\n//       (store) => {\n//         let state = store.getState();\n\n//         let addPost = () => {\n//           store.dispatch(addPostActionCreator());\n//         }\n//         let onPostChange = (text) => {\n//           let action = updateNewPostTextActionCreator(text);\n//           store.dispatch(action);\n//         }\n//         return (\n//           <MyPosts updateNewPostText={onPostChange} addPost={addPost}\n//             posts={state.profilePage.post}\n//             newPostText={state.profilePage.newPostText} />\n//         )\n//       }\n//     }\n//     </StoreContext.Consumer>\n\n\n//   );\n// }\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.post,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost:  (addNewPostBody) => {\n      dispatch(addPostActionCreator(addNewPostBody));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer\n"]},"metadata":{},"sourceType":"module"}