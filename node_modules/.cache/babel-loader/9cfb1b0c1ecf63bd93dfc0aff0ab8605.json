{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followSuccess, unfollowSuccess, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize); // this.props.toggleIsFetching(true);\n      // this.props.setCurrentPage(pageNumber)\n      // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n      //     this.props.toggleIsFetching(false);\n      //     this.props.setUsers(data.items);\n      // });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(true);\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    //     this.props.toggleIsFetching(false);\n    //     this.props.setUsers(data.items);\n    //     this.props.setTotalUsersCount(data.totalCount);\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      onPageChanged: this.onPageChanged,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nlet mapDispathToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followSuccess(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowSuccess(userId));\n    },\n    users: users => {\n      dispatch(getUsers(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPage(currentPage));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleFollowingProgress(isFetching));\n    }\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\nexport default connect(mapStateToProps, mapDispathToProps)(AuthRedirectComponent);","map":{"version":3,"sources":["/home/esen/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followSuccess","unfollowSuccess","setCurrentPage","toggleFollowingProgress","getUsers","Users","Preloader","usersAPI","withAuthRedirect","UsersContainer","Component","constructor","props","onPageChanged","pageNumber","pageSize","componentDidMount","currentPage","render","isFetching","totalUserCount","users","unfollow","follow","followingInProgress","mapStateToProps","state","usersPage","mapDispathToProps","dispatch","userId","toggleIsFetching","AuthRedirectComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    followSuccess,\n    unfollowSuccess,\n    \n    setCurrentPage,\n    toggleFollowingProgress,\n    getUsers\n}\nfrom '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass UsersContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    \n      \n    \n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n        // this.props.toggleIsFetching(true);\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items);\n        //     this.props.setTotalUsersCount(data.totalCount);\n\n        // });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n        // this.props.toggleIsFetching(true);\n        // this.props.setCurrentPage(pageNumber)\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items);\n\n        // });\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUserCount={this.props.totalUserCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                onPageChanged={this.onPageChanged}\n\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n\n            />\n        </>\n\n    }\n\n}\n\n\n\nlet mapStateToProps = (state) => {\n     \n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUserCount: state.usersPage.totalUserCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nlet mapDispathToProps = (dispatch) => {\n\n    return {\n        follow: (userId) => {\n\n            dispatch(followSuccess(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowSuccess(userId));\n        },\n        users: (users) => {\n            dispatch(getUsers(users));\n        },\n\n        setCurrentPage: (currentPage) => {\n            dispatch(setCurrentPage(currentPage));\n        },\n       \n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleFollowingProgress(isFetching));\n        }\n    }\n\n}\n\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\n\nexport default connect(mapStateToProps,mapDispathToProps)(AuthRedirectComponent);"]},"metadata":{},"sourceType":"module"}