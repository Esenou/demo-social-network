{"ast":null,"code":"import{createSelector}from\"reselect\";var getUsersSelector=function getUsersSelector(state){return state.usersPage.users;};export var getUsers=createSelector(getUsersSelector,function(users){return users.filter(function(u){return true;});});export var getPageSize=function getPageSize(state){return state.usersPage.pageSize;};export var getTotalUserCount=function getTotalUserCount(state){return state.usersPage.totalUserCount;};export var getCurrentPage=function getCurrentPage(state){return state.usersPage.currentPage;};export var getIsFetching=function getIsFetching(state){return state.usersPage.isFetching;};export var getFollowingInProgress=function getFollowingInProgress(state){return state.usersPage.followingInProgress;};","map":{"version":3,"sources":["/home/esen/my-app/src/redux/users-selectors.js"],"names":["createSelector","getUsersSelector","state","usersPage","users","getUsers","filter","u","getPageSize","pageSize","getTotalUserCount","totalUserCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAChC,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAvB,CACH,CAFD,CAIA,MAAO,IAAMC,CAAAA,QAAQ,CAAGL,cAAc,CAACC,gBAAD,CAClC,SAACG,KAAD,CAAW,CACP,MAAOA,CAAAA,KAAK,CAACE,MAAN,CAAa,SAAAC,CAAC,QAAI,KAAJ,EAAd,CAAP,CACP,CAHqC,CAA/B,CAIP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACN,KAAD,CAAW,CAAE,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBM,QAAvB,CAAiC,CAAlE,CAEP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACR,KAAD,CAAW,CAAE,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBQ,cAAvB,CAAuC,CAA9E,CAEP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACV,KAAD,CAAW,CAAE,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBU,WAAvB,CAAoC,CAAxE,CAEP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACZ,KAAD,CAAW,CAAE,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBY,UAAvB,CAAmC,CAAtE,CAEP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACd,KAAD,CAAW,CAAE,MAAOA,CAAAA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB,CAA4C,CAAxF","sourcesContent":["import { createSelector } from \"reselect\"\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n        return users.filter(u => true);\n})\nexport const getPageSize = (state) => { return state.usersPage.pageSize }\n\nexport const getTotalUserCount = (state) => { return state.usersPage.totalUserCount }\n\nexport const getCurrentPage = (state) => { return state.usersPage.currentPage }\n\nexport const getIsFetching = (state) => { return state.usersPage.isFetching }\n\nexport const getFollowingInProgress = (state) => { return state.usersPage.followingInProgress }"]},"metadata":{},"sourceType":"module"}