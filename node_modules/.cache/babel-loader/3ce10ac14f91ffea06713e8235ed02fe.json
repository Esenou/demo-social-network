{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import{NavLink,Redirect}from'react-router-dom';import Message from'./Message/Message';import DialogItem from'./DialogItem/DialogItem';import{reduxForm,Field,FieldArray}from'redux-form';import{required,maxLengthCreator}from'../../utils/validators/validator';import{Textarea}from'../common/FormsControls/FormsControls';var maxLength15=maxLengthCreator(15);var AddMessageForm=function AddMessageForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{validate:[required,maxLength15],component:Textarea,placeholder:\"Enter your message\",name:\"newMessageBody\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"send\")));};var AddMessageReduxForm=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);var Dialogs=function Dialogs(props){var dialogElements=props.dialogsPages.dialogsData.map(function(dialog){return/*#__PURE__*/React.createElement(DialogItem,{name:dialog.name,id:dialog.id});});var messagesElements=props.dialogsPages.messagesData.map(function(m){return/*#__PURE__*/React.createElement(Message,{message:m.message});});var addNewMessage=function addNewMessage(fromData){console.log(fromData);props.sendMessage(fromData.newMessageBody);};return/*#__PURE__*/React.createElement(\"div\",{className:s.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:s.dialogsItems},dialogElements),/*#__PURE__*/React.createElement(\"div\",{className:s.messages},messagesElements,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddMessageReduxForm,{onSubmit:addNewMessage})))));};export default Dialogs;","map":{"version":3,"sources":["/home/esen/my-app/src/components/Dialogs/Dialogs.js"],"names":["React","s","NavLink","Redirect","Message","DialogItem","reduxForm","Field","FieldArray","required","maxLengthCreator","Textarea","maxLength15","AddMessageForm","props","handleSubmit","AddMessageReduxForm","form","Dialogs","dialogElements","dialogsPages","dialogsData","map","dialog","name","id","messagesElements","messagesData","m","message","addNewMessage","fromData","console","log","sendMessage","newMessageBody","dialogs","dialogsItems","messages"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,kCAA3C,CACA,OAASC,QAAT,KAAyB,uCAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAGF,gBAAgB,CAAC,EAAD,CAApC,CACA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,mBACE,4BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,eACE,4CACE,oBAAC,KAAD,EAAQ,QAAQ,CAAE,CAACN,QAAD,CAAUG,WAAV,CAAlB,CAA2C,SAAS,CAAED,QAAtD,CAAiE,WAAW,CAAC,oBAA7E,CAAkG,IAAI,CAAC,gBAAvG,EADF,CADF,cAKE,4CACE,yCADF,CALF,CADF,CAWD,CAZD,CAcA,GAAMK,CAAAA,mBAAmB,CAAGV,SAAS,CAAC,CAAEW,IAAI,CAAE,sBAAR,CAAD,CAAT,CAA4CJ,cAA5C,CAA5B,CAIA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACJ,KAAD,CAAW,CAIzB,GAAIK,CAAAA,cAAc,CAAGL,KAAK,CAACM,YAAN,CAAmBC,WAAnB,CAA+BC,GAA/B,CAAmC,SAAAC,MAAM,qBAAI,oBAAC,UAAD,EAAY,IAAI,CAAEA,MAAM,CAACC,IAAzB,CAA+B,EAAE,CAAED,MAAM,CAACE,EAA1C,EAAJ,EAAzC,CAArB,CACA,GAAIC,CAAAA,gBAAgB,CAAGZ,KAAK,CAACM,YAAN,CAAmBO,YAAnB,CAAgCL,GAAhC,CAAoC,SAAAM,CAAC,qBAAI,oBAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAAJ,EAArC,CAAvB,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAc,CAElCC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAjB,KAAK,CAACoB,WAAN,CAAkBH,QAAQ,CAACI,cAA3B,EACD,CAJD,CAMA,mBACE,2BAAK,SAAS,CAAElC,CAAC,CAACmC,OAAlB,eACE,2BAAK,SAAS,CAAEnC,CAAC,CAACoC,YAAlB,EACGlB,cADH,CADF,cAKE,2BAAK,SAAS,CAAElB,CAAC,CAACqC,QAAlB,EACGZ,gBADH,cAEE,4CACE,4CACE,oBAAC,mBAAD,EAAqB,QAAQ,CAAEI,aAA/B,EADF,CADF,CAFF,CALF,CADF,CAmBD,CAnCD,CAoCA,cAAeZ,CAAAA,OAAf","sourcesContent":["\nimport React from 'react'\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport { reduxForm, Field, FieldArray } from 'redux-form';\nimport { required, maxLengthCreator } from '../../utils/validators/validator';\nimport { Textarea } from '../common/FormsControls/FormsControls';\n\nconst maxLength15 = maxLengthCreator(15);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field  validate={[required,maxLength15]}  component={Textarea}  placeholder=\"Enter your message\" name=\"newMessageBody\"  />\n\n      </div >\n      <div>\n        <button>send</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n\n\n\nconst Dialogs = (props) => {\n\n\n\n  let dialogElements = props.dialogsPages.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\n  let messagesElements = props.dialogsPages.messagesData.map(m => <Message message={m.message} />);\n  \n\n\n\n  const addNewMessage = (fromData) => {\n    \n    console.log(fromData)\n    props.sendMessage(fromData.newMessageBody);\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogElements}\n      </div>\n\n      <div className={s.messages}>\n        {messagesElements}\n        <div>\n          <div>\n            <AddMessageReduxForm onSubmit={addNewMessage} />\n          </div>\n        </div>\n\n\n      </div>\n    </div >\n  );\n\n}\nexport default Dialogs\n"]},"metadata":{},"sourceType":"module"}