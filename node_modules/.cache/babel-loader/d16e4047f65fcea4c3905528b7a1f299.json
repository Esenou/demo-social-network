{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsersThunkCreator(pageNumber, this.props.pageSize); // this.props.toggleIsFetching(true);\n      // this.props.setCurrentPage(pageNumber)\n      // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n      //     this.props.toggleIsFetching(false);\n      //     this.props.setUsers(data.items);\n      // });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(true);\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    //     this.props.toggleIsFetching(false);\n    //     this.props.setUsers(data.items);\n    //     this.props.setTotalUsersCount(data.totalCount);\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      onPageChanged: this.onPageChanged,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // let mapDispathToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         setTotalUsersCount: (totalUsersCount) => {\n//             dispatch(setTotalUsersCountAC(totalUsersCount));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n})(UsersContainer);","map":{"version":3,"sources":["/home/esen/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setCurrentPage","toggleFollowingProgress","getUsers","Users","Preloader","usersAPI","UsersContainer","Component","constructor","props","onPageChanged","pageNumber","getUsersThunkCreator","pageSize","componentDidMount","currentPage","render","isFetching","totalUserCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,MADJ,EAEIC,QAFJ,EAGIC,cAHJ,EAIIC,uBAJJ,EAKIC,QALJ,QAOK,2BAPL;AAQA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,cAAN,SAA6BV,KAAK,CAACW,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,aAbmB,GAaFC,UAAD,IAAgB;AAC5B,WAAKF,KAAL,CAAWG,oBAAX,CAAgCD,UAAhC,EAA4C,KAAKF,KAAL,CAAWI,QAAvD,EAD4B,CAE5B;AACA;AACA;AACA;AACA;AAEA;AACH,KAtBkB;AAElB;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,KAAL,CAAWG,oBAAX,CAAgC,KAAKH,KAAL,CAAWM,WAA3C,EAAwD,KAAKN,KAAL,CAAWI,QAAnE,EADgB,CAEhB;AACA;AACA;AACA;AACA;AAEA;AACH;;AAYDG,EAAAA,MAAM,GAAG;AAGL,wBAAO,0CACF,KAAKP,KAAL,CAAWQ,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADtC,eAEH,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAE,KAAKR,KAAL,CAAWS,cAAlC;AACI,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWI,QADzB;AAEI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWM,WAF5B;AAGI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWU,KAHtB;AAII,MAAA,aAAa,EAAE,KAAKT,aAJxB;AAMI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWV,QANzB;AAOI,MAAA,MAAM,EAAE,KAAKU,KAAL,CAAWX,MAPvB;AAQI,MAAA,uBAAuB,EAAE,KAAKW,KAAL,CAAWR,uBARxC;AASI,MAAA,mBAAmB,EAAE,KAAKQ,KAAL,CAAWW,mBATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAgBH;;AA7CwC;;AAmD7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAE7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,cAAc,EAAEI,KAAK,CAACC,SAAN,CAAgBL,cAH7B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CAVD,C,CAYA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAevB,OAAO,CAACwB,eAAD,EAClB;AACIvB,EAAAA,MADJ;AACYC,EAAAA,QADZ;AACsBC,EAAAA,cADtB;AAEIC,EAAAA,uBAFJ;AAE6BC,EAAAA;AAF7B,CADkB,CAAP,CAIRI,cAJQ,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    getUsers\n}\nfrom '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n        // this.props.toggleIsFetching(true);\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items);\n        //     this.props.setTotalUsersCount(data.totalCount);\n\n        // });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n        // this.props.toggleIsFetching(true);\n        // this.props.setCurrentPage(pageNumber)\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items);\n\n        // });\n    }\n\n    render() {\n\n\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUserCount={this.props.totalUserCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                onPageChanged={this.onPageChanged}\n\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n\n            />\n        </>\n\n    }\n\n}\n\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUserCount: state.usersPage.totalUserCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// let mapDispathToProps = (dispatch) => {\n\n//     return {\n//         follow: (userId) => {\n\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         setTotalUsersCount: (totalUsersCount) => {\n//             dispatch(setTotalUsersCountAC(totalUsersCount));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//     }\n\n// }\n\nexport default connect(mapStateToProps,\n    {\n        follow, unfollow, setCurrentPage,\n        toggleFollowingProgress, getUsers\n    })(UsersContainer);"]},"metadata":{},"sourceType":"module"}