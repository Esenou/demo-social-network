{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/common/FormsControls/FormsControls.js\";\nimport React from 'react';\nimport styles from './FormsControls.module.css';\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n    spellCheck: \"true\"\n  }, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 18\n    }\n  }, meta.error));\n};\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    spellCheck: \"true\"\n  }, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  }, meta.error));\n};","map":{"version":3,"sources":["/home/esen/my-app/src/components/common/FormsControls/FormsControls.js"],"names":["React","styles","Textarea","input","meta","props","hasError","touched","error","formControl","Input"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA2B;AAC/C,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,WAAP,GAAoB,GAApB,IAA0BH,QAAQ,GAAGL,MAAM,CAACO,KAAV,GAAiB,EAAnD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,UAAU,EAAE;AAAtB,KAAiCL,KAAjC,EAA4CE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,EAIHC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACI,KAAZ,CAJT,CADJ;AAQH,CAVM;AAaP,OAAO,MAAME,KAAK,GAAG,CAAC;AAACP,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA2B;AAC5C,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,WAAP,GAAoB,GAApB,IAA0BH,QAAQ,GAAGL,MAAM,CAACO,KAAV,GAAiB,EAAnD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,UAAU,EAAE;AAAnB,KAA8BL,KAA9B,EAAyCE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,EAIHC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACI,KAAZ,CAJT,CADJ;AAQH,CAVM","sourcesContent":["\nimport React from 'react';\nimport styles from './FormsControls.module.css';\n\nexport const Textarea = ({input, meta, ...props})=>{\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl+ \" \" +(hasError ? styles.error: \"\")}>\n            <div >\n                <textarea spellCheck =\"true\" {...input} {...props}/>\n            </div>\n    {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\n\nexport const Input = ({input, meta, ...props})=>{\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl+ \" \" +(hasError ? styles.error: \"\")}>\n            <div >\n                <input spellCheck =\"true\" {...input} {...props}/>\n            </div>\n    {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}