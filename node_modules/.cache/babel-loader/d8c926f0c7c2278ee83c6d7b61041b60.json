{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/hoc/withAuthRedirect.js\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 44\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["/home/esen/my-app/src/hoc/withAuthRedirect.js"],"names":["Component","React","Redirect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","RedirectComponent","render","props","ConnectedAuthRedirectComponent","connect"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAC7B;AACIC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADvB,CAD6B,CAAjC;;AAKA,OAAO,MAAME,gBAAgB,GAAIP,SAAD,IAAe;AAC3C,QAAMQ,iBAAN,SAAgCP,KAAK,CAACD,SAAtC,CAAgD;AAC5CS,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWL,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,0BAAO,oBAAC,SAAD,oBAAe,KAAKK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ2C;;AAO9C,MAAIC,8BAA8B,GAAGC,OAAO,CAACT,0BAAD,CAAP,CAAoCK,iBAApC,CAArC;AACF,SAAOG,8BAAP;AACH,CAVM","sourcesContent":["import { Component } from \"react\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) =>(\n    {\n        isAuth: state.auth.isAuth\n    }\n  );\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n    \n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}