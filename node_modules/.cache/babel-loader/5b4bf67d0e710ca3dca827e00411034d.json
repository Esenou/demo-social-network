{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      onPageChanged: this.onPageChanged,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // let mapDispathToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         setTotalUsersCount: (totalUsersCount) => {\n//             dispatch(setTotalUsersCountAC(totalUsersCount));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress\n})(UsersContainer);","map":{"version":3,"sources":["/home/esen/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","Users","Preloader","usersAPI","UsersContainer","Component","constructor","props","onPageChanged","pageNumber","getUsers","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUserCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching , toggleFollowingProgress} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount);\n\n        });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.toggleIsFetching(true);\n        this.props.setCurrentPage(pageNumber)\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n\n        });\n    }\n\n    render() {\n\n\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUserCount={this.props.totalUserCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                onPageChanged={this.onPageChanged}\n\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingInProgress = {this.props.followingInProgress}\n\n            />\n        </>\n\n    }\n\n}\n\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUserCount: state.usersPage.totalUserCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// let mapDispathToProps = (dispatch) => {\n\n//     return {\n//         follow: (userId) => {\n\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         setTotalUsersCount: (totalUsersCount) => {\n//             dispatch(setTotalUsersCountAC(totalUsersCount));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//     }\n\n// }\n\nexport default connect(mapStateToProps,\n    {\n        follow, unfollow, setUsers,\n        setCurrentPage, setTotalUsersCount,\n        toggleIsFetching, toggleFollowingProgress\n    })(UsersContainer);"]},"metadata":{},"sourceType":"module"}