{"ast":null,"code":"import _toConsumableArray from\"/home/esen/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{Component}from'react';import{addPostActionCreator,updateNewPostTextActionCreator}from'../../../redux/profile-reducer';import s from'./MyPosts.module.css';import Post from'./Post/Post';import{Field,reduxForm}from'redux-form';import{required,maxLengthCreator}from'../../../utils/validators/validator';import{Textarea}from'../../common/FormsControls/FormsControls';var length=maxLengthCreator(10);var AddNewPostForm=function AddNewPostForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{validate:[required,length],component:Textarea,value:props.newPostText,name:\"addNewPostBody\"})),/*#__PURE__*/React.createElement(\"div\",null,\" \",/*#__PURE__*/React.createElement(\"button\",null,\" Add post\")));};var AddPostReduxForm=reduxForm({form:\"addPostForm\"})(AddNewPostForm);var MyPosts=React.memo(function(props){var postElements=_toConsumableArray(props.posts).reverse().map(function(post){return/*#__PURE__*/React.createElement(Post,{message:post.message,likesCount:post.likesCount});});var addNewPost=function addNewPost(post){props.addPost(post.addNewPostBody);console.log(post.addNewPostBody);};return/*#__PURE__*/React.createElement(\"div\",{className:s.postsBlock},/*#__PURE__*/React.createElement(\"h3\",null,\"My posts\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddPostReduxForm,{onSubmit:addNewPost})),/*#__PURE__*/React.createElement(\"div\",{className:s.posts},postElements));});export default MyPosts;","map":{"version":3,"sources":["/home/esen/my-app/src/components/Profile/MyPosts/MyPosts.js"],"names":["React","Component","addPostActionCreator","updateNewPostTextActionCreator","s","Post","Field","reduxForm","required","maxLengthCreator","Textarea","length","AddNewPostForm","props","handleSubmit","newPostText","AddPostReduxForm","form","MyPosts","memo","postElements","posts","reverse","map","post","message","likesCount","addNewPost","addPost","addNewPostBody","console","log","postsBlock"],"mappings":"gJACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,oBAAT,CAA+BC,8BAA/B,KAAqE,gCAArE,CAEA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,qCAA3C,CACA,OAASC,QAAT,KAAyB,0CAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAGF,gBAAgB,CAAC,EAAD,CAA/B,CACA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,mBACE,4BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,eACE,4CACE,oBAAC,KAAD,EACE,QAAQ,CAAE,CAACN,QAAD,CAAWG,MAAX,CADZ,CACgC,SAAS,CAAED,QAD3C,CAEE,KAAK,CAAEG,KAAK,CAACE,WAFf,CAE4B,IAAI,CAAE,gBAFlC,EADF,CADF,cAOE,gDAAM,8CAAN,CAPF,CADF,CAWD,CAZD,CAaA,GAAMC,CAAAA,gBAAgB,CAAGT,SAAS,CAAC,CAAEU,IAAI,CAAE,aAAR,CAAD,CAAT,CAAmCL,cAAnC,CAAzB,CACA,GAAMM,CAAAA,OAAO,CAAGlB,KAAK,CAACmB,IAAN,CAAW,SAAAN,KAAK,CAAI,CAElC,GAAIO,CAAAA,YAAY,CAAG,mBAAIP,KAAK,CAACQ,KAAV,EAChBC,OADgB,GAEhBC,GAFgB,CAEZ,SAAAC,IAAI,qBAAI,oBAAC,IAAD,EAAM,OAAO,CAAEA,IAAI,CAACC,OAApB,CAA6B,UAAU,CAAED,IAAI,CAACE,UAA9C,EAAJ,EAFQ,CAAnB,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,IAAD,CAAU,CAC3BX,KAAK,CAACe,OAAN,CAAcJ,IAAI,CAACK,cAAnB,EACAC,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACK,cAAjB,EACD,CAHD,CAMA,mBAGE,2BAAK,SAAS,CAAEzB,CAAC,CAAC4B,UAAlB,eACE,yCADF,cAEE,4CACE,oBAAC,gBAAD,EAAkB,QAAQ,CAAEL,UAA5B,EADF,CAFF,cAME,2BAAK,SAAS,CAAEvB,CAAC,CAACiB,KAAlB,EACGD,YADH,CANF,CAHF,CAiBD,CA9Be,CAAhB,CA+BA,cAAeF,CAAAA,OAAf","sourcesContent":["\nimport React, { Component } from 'react'\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\n\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst length = maxLengthCreator(10);\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[required, length]} component={Textarea}\n          value={props.newPostText} name={\"addNewPostBody\"} />\n      </div>\n\n      <div> <button> Add post</button></div>\n    </form>\n  )\n}\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddNewPostForm)\nconst MyPosts = React.memo(props => {\n\n  let postElements = [...props.posts]\n    .reverse()\n    .map(post => <Post message={post.message} likesCount={post.likesCount} />);\n\n\n  const addNewPost = (post) => {\n    props.addPost(post.addNewPostBody)\n    console.log(post.addNewPostBody);\n  }\n\n\n  return (\n\n\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <AddPostReduxForm onSubmit={addNewPost} />\n      </div>\n\n      <div className={s.posts}>\n        {postElements}\n      </div>\n\n\n    </div>\n\n  );\n})\nexport default MyPosts\n"]},"metadata":{},"sourceType":"module"}