{"ast":null,"code":"var _jsxFileName = \"/home/esen/my-app/src/components/common/Paginator/Paginator.jsx\";\nimport React, { useState } from 'react';\nimport styles from './Paginator.module.css';\nimport cn from 'classnames';\n\nlet Paginator = props => {\n  let portionSize = 10;\n  let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Prev\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: props.currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Next\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/home/esen/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","cn","Paginator","props","portionSize","pagesCount","Math","ceil","totalUserCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","currentPage","pageNumber","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AACA,IAAIC,SAAS,GAAIC,KAAD,IAAW;AAEvB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,cAAN,GAAuBL,KAAK,CAACM,QAAvC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBV,WAAtB,GAAoC,CAAhE;AACA,MAAIa,sBAAsB,GAAGH,aAAa,GAAGV,WAA7C;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIFJ,aAAa,GAAG,CAAhB,iBACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,EAQCJ,KAAK,CACAS,MADL,CACYC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAIH,sBADpD,EAEKI,GAFL,CAESD,CAAC,IAAI;AACN,wBAAO;AAAM,MAAA,SAAS,EAAEnB,EAAE,CAAC;AACvB,SAACD,MAAM,CAACsB,YAAR,GAAuBnB,KAAK,CAACoB,WAAN,KAAsBH;AADtB,OAAD,EAEvBpB,MAAM,CAACwB,UAFgB,CAAnB;AAGH,MAAA,GAAG,EAAEJ,CAHF;AAKH,MAAA,OAAO,EAAGK,CAAD,IAAO;AAAEtB,QAAAA,KAAK,CAACuB,aAAN,CAAoBN,CAApB;AAAwB,OALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAK0CA,CAL1C,CAAP;AAMH,GATL,CARD,EAmBFP,YAAY,GAAGC,aAAf,iBACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBD,CAAP;AA2BH,CAzCD;;AA2CA,eAAeZ,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from './Paginator.module.css';\nimport cn from 'classnames';\nlet Paginator = (props) => {\n\n    let portionSize = 10;\n    let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div className={styles.paginator}>\n\n\n\n        {portionNumber > 1 &&\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>Prev</button>\n        }\n        {\n            pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span className={cn({\n                        [styles.selectedPage]: props.currentPage === p\n                    }, styles.pageNumber)}\n                        key={p}\n\n                        onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\n                })\n        }\n        {portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>\n        }\n\n\n    </div>\n\n\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}